import type { Config } from 'tailwindcss';

const config: Config = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: [
          'Inter',
          'ui-sans-serif',
          'system-ui',
          '-apple-system',
          'BlinkMacSystemFont',
          'Segoe UI',
          'Roboto',
          'Helvetica Neue',
          'Arial',
          'Noto Sans',
          'sans-serif',
          'Apple Color Emoji',
          'Segoe UI Emoji',
          'Segoe UI Symbol',
          'Noto Color Emoji',
        ],
      },
      colors: {
        primary: {
          50: 'rgb(var(--color-primary-50) / 1)',
          100: 'rgb(var(--color-primary-100) / 1)',
          200: 'rgb(var(--color-primary-200) / 1)',
          300: 'rgb(var(--color-primary-300) / 1)',
          400: 'rgb(var(--color-primary-400) / 1)',
          500: 'rgb(var(--color-primary-500) / 1)',
          600: 'rgb(var(--color-primary-600) / 1)',
          700: 'rgb(var(--color-primary-700) / 1)',
          800: 'rgb(var(--color-primary-800) / 1)',
          900: 'rgb(var(--color-primary-900) / 1)',
        },
        secondary: {
          50: 'rgb(var(--color-secondary-50) / 1)',
          100: 'rgb(var(--color-secondary-100) / 1)',
          200: 'rgb(var(--color-secondary-200) / 1)',
          300: 'rgb(var(--color-secondary-300) / 1)',
          400: 'rgb(var(--color-secondary-400) / 1)',
          500: 'rgb(var(--color-secondary-500) / 1)',
          600: 'rgb(var(--color-secondary-600) / 1)',
          700: 'rgb(var(--color-secondary-700) / 1)',
          800: 'rgb(var(--color-secondary-800) / 1)',
          900: 'rgb(var(--color-secondary-900) / 1)',
        },
        tertiary: {
          50: 'rgb(var(--color-tertiary-50) / 1)',
          100: 'rgb(var(--color-tertiary-100) / 1)',
          200: 'rgb(var(--color-tertiary-200) / 1)',
          300: 'rgb(var(--color-tertiary-300) / 1)',
          400: 'rgb(var(--color-tertiary-400) / 1)',
          500: 'rgb(var(--color-tertiary-500) / 1)',
          600: 'rgb(var(--color-tertiary-600) / 1)',
          700: 'rgb(var(--color-tertiary-700) / 1)',
          800: 'rgb(var(--color-tertiary-800) / 1)',
          900: 'rgb(var(--color-tertiary-900) / 1)',
        },
        success: {
          50: 'rgb(var(--color-success-50) / 1)',
          100: 'rgb(var(--color-success-100) / 1)',
          200: 'rgb(var(--color-success-200) / 1)',
          300: 'rgb(var(--color-success-300) / 1)',
          400: 'rgb(var(--color-success-400) / 1)',
          500: 'rgb(var(--color-success-500) / 1)',
          600: 'rgb(var(--color-success-600) / 1)',
          700: 'rgb(var(--color-success-700) / 1)',
          800: 'rgb(var(--color-success-800) / 1)',
          900: 'rgb(var(--color-success-900) / 1)',
        },
        warning: {
          50: 'rgb(var(--color-warning-50) / 1)',
          100: 'rgb(var(--color-warning-100) / 1)',
          200: 'rgb(var(--color-warning-200) / 1)',
          300: 'rgb(var(--color-warning-300) / 1)',
          400: 'rgb(var(--color-warning-400) / 1)',
          500: 'rgb(var(--color-warning-500) / 1)',
          600: 'rgb(var(--color-warning-600) / 1)',
          700: 'rgb(var(--color-warning-700) / 1)',
          800: 'rgb(var(--color-warning-800) / 1)',
          900: 'rgb(var(--color-warning-900) / 1)',
        },
        error: {
          50: 'rgb(var(--color-error-50) / 1)',
          100: 'rgb(var(--color-error-100) / 1)',
          200: 'rgb(var(--color-error-200) / 1)',
          300: 'rgb(var(--color-error-300) / 1)',
          400: 'rgb(var(--color-error-400) / 1)',
          500: 'rgb(var(--color-error-500) / 1)',
          600: 'rgb(var(--color-error-600) / 1)',
          700: 'rgb(var(--color-error-700) / 1)',
          800: 'rgb(var(--color-error-800) / 1)',
          900: 'rgb(var(--color-error-900) / 1)',
        },
        surface: {
          50: 'rgb(var(--color-surface-50) / 1)',
          100: 'rgb(var(--color-surface-100) / 1)',
          200: 'rgb(var(--color-surface-200) / 1)',
          300: 'rgb(var(--color-surface-300) / 1)',
          400: 'rgb(var(--color-surface-400) / 1)',
          500: 'rgb(var(--color-surface-500) / 1)',
          600: 'rgb(var(--color-surface-600) / 1)',
          700: 'rgb(var(--color-surface-700) / 1)',
          800: 'rgb(var(--color-surface-800) / 1)',
          900: 'rgb(var(--color-surface-900) / 1)',
        },
      },
    },
  },
  plugins: [],
};
export default config;
